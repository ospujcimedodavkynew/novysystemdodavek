// This file should be generated by the Supabase CLI:
// npx supabase gen types typescript --project-id <your-project-id> > src/types/database.types.ts
// For now, we define a placeholder based on our existing types.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      customers: {
        Row: {
          id: string
          created_at: string
          firstName: string
          lastName:string
          email: string
          phone: string
          idCardNumber: string
          driversLicenseNumber: string
        }
        Insert: {
          id?: string
          created_at?: string
          firstName: string
          lastName:string
          email: string
          phone: string
          idCardNumber: string
          driversLicenseNumber: string
        }
        Update: {
          id?: string
          created_at?: string
          firstName?: string
          lastName?:string
          email?: string
          phone?: string
          idCardNumber?: string
          driversLicenseNumber?: string
        }
      }
      vehicles: {
        Row: {
          id: string
          created_at: string
          brand: 'Renault Master' | 'Opel Movano' | 'Fiat Ducato' | 'Peugeot Boxer' | 'Mercedes Sprinter'
          licensePlate: string
          vin: string
          year: number
          lastServiceDate: string
          lastServiceCost: number
          stkDate: string
          insuranceInfo: string
          vignetteUntil: string
          pricing: Json
        }
        Insert: {
          id?: string
          created_at?: string
          brand: 'Renault Master' | 'Opel Movano' | 'Fiat Ducato' | 'Peugeot Boxer' | 'Mercedes Sprinter'
          licensePlate: string
          vin: string
          year: number
          lastServiceDate: string
          lastServiceCost: number
          stkDate: string
          insuranceInfo: string
          vignetteUntil: string
          pricing: Json
        }
        Update: {
          id?: string
          created_at?: string
          brand?: 'Renault Master' | 'Opel Movano' | 'Fiat Ducato' | 'Peugeot Boxer' | 'Mercedes Sprinter'
          licensePlate?: string
          vin?: string
          year?: number
          lastServiceDate?: string
          lastServiceCost?: number
          stkDate?: string
          insuranceInfo?: string
          vignetteUntil?: string
          pricing?: Json
        }
      }
      rentals: {
        Row: {
            id: string
            created_at: string
            vehicleId: string
            customerId: string
            startDate: string
            endDate: string
            totalPrice: number
            status: 'active' | 'completed' | 'upcoming'
        }
        Insert: {
            id?: string
            created_at?: string
            vehicleId: string
            customerId: string
            startDate: string
            endDate: string
            totalPrice: number
            status: 'active' | 'completed' | 'upcoming'
        }
        Update: {
            id?: string
            created_at?: string
            vehicleId?: string
            customerId?: string
            startDate?: string
            endDate?: string
            totalPrice?: number
            status?: 'active' | 'completed' | 'upcoming'
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
