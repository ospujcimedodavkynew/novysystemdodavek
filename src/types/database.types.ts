// This file should be generated by the Supabase CLI:
// npx supabase gen types typescript --project-id <your-project-id> > src/types/database.types.ts
// For now, we define a placeholder based on our existing types.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      customers: {
        Row: {
          id: string
          created_at: string
          first_name: string
          last_name:string
          email: string
          phone: string | null
          id_card_number: string | null
          drivers_license_number: string | null
        }
        Insert: {
          id?: string
          created_at?: string
          first_name: string
          last_name:string
          email: string
          phone: string | null
          id_card_number: string | null
          drivers_license_number: string | null
        }
        Update: {
          id?: string
          created_at?: string
          first_name?: string
          last_name?:string
          email?: string
          phone?: string | null
          id_card_number?: string | null
          drivers_license_number?: string | null
        }
      }
      vehicles: {
        Row: {
          id: string
          created_at: string
          brand: 'Renault Master' | 'Opel Movano' | 'Fiat Ducato' | 'Peugeot Boxer' | 'Mercedes Sprinter'
          license_plate: string
          vin: string
          year: number
          last_service_date: string | null
          last_service_cost: number | null
          stk_date: string | null
          insurance_info: string | null
          vignette_until: string | null
          pricing: Json
        }
        Insert: {
          id?: string
          created_at?: string
          brand: 'Renault Master' | 'Opel Movano' | 'Fiat Ducato' | 'Peugeot Boxer' | 'Mercedes Sprinter'
          license_plate: string
          vin: string
          year: number
          last_service_date: string | null
          last_service_cost: number | null
          stk_date: string | null
          insurance_info: string | null
          vignette_until: string | null
          pricing: Json
        }
        Update: {
          id?: string
          created_at?: string
          brand?: 'Renault Master' | 'Opel Movano' | 'Fiat Ducato' | 'Peugeot Boxer' | 'Mercedes Sprinter'
          license_plate?: string
          vin?: string
          year?: number
          last_service_date?: string | null
          last_service_cost?: number | null
          stk_date?: string | null
          insurance_info?: string | null
          vignette_until?: string | null
          pricing?: Json
        }
      }
      rentals: {
        Row: {
            id: string
            created_at: string
            vehicle_id: string
            customer_id: string
            start_date: string
            end_date: string
            total_price: number
            status: 'active' | 'completed' | 'upcoming'
        }
        Insert: {
            id?: string
            created_at?: string
            vehicle_id: string
            customer_id: string
            start_date: string
            end_date: string
            total_price: number
            status: 'active' | 'completed' | 'upcoming'
        }
        Update: {
            id?: string
            created_at?: string
            vehicle_id?: string
            customer_id?: string
            start_date?: string
            end_date?: string
            total_price?: number
            status?: 'active' | 'completed' | 'upcoming'
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
